import{_ as e}from"./_plugin-vue_export-helper.cdc0426e.js";import{o,c as p,b as s,d as t,f as c,e as n,r as i}from"./app.3257c9dc.js";const l={},r=c(`<p>All the following information is from <code>samtools (v1.15.1)</code> <sup class="footnote-ref"><a href="#footnote1">[1]</a><a class="footnote-anchor" id="footnote-ref1"></a></sup></p><h3 id="_1-fixmate" tabindex="-1"><a class="header-anchor" href="#_1-fixmate" aria-hidden="true">#</a> 1. fixmate: <sup class="footnote-ref"><a href="#footnote2">[2]</a><a class="footnote-anchor" id="footnote-ref2"></a></sup></h3><p>Fill in mate coordinates, ISIZE and mate related flags from a name-sorted alignment.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>samtools fixmate <span class="token punctuation">[</span>-rpcm<span class="token punctuation">]</span> <span class="token punctuation">[</span>-O format<span class="token punctuation">]</span> in.nameSrt.bam out.bam
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">Parameters</p><ul><li><code>-r</code>: Remove secondary and unmapped reads.</li><li><code>-m</code>: Add ms (mate score) tags. These are used by <code>markdup</code> to select the best reads to keep.</li></ul></div><h3 id="_2-markdup" tabindex="-1"><a class="header-anchor" href="#_2-markdup" aria-hidden="true">#</a> 2. markdup: <sup class="footnote-ref"><a href="#footnote3">[3]</a><a class="footnote-anchor" id="footnote-ref3"></a></sup></h3><p>Mark duplicate alignments from a coordinate sorted file that has been run through <code>samtools fixmate</code> with the <code>-m</code> option. This program relies on the MC and ms tags that <code>fixmate</code> provides.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>samtools markdup <span class="token punctuation">[</span>-l length<span class="token punctuation">]</span> <span class="token punctuation">[</span>-r<span class="token punctuation">]</span> <span class="token punctuation">[</span>-s<span class="token punctuation">]</span> <span class="token punctuation">[</span>-T<span class="token punctuation">]</span> <span class="token punctuation">[</span>-S<span class="token punctuation">]</span> in.algsort.bam out.bam
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">Parameters</p><ul><li><code>-r</code>: Remove duplicate reads.</li></ul></div><h3 id="_3-sort" tabindex="-1"><a class="header-anchor" href="#_3-sort" aria-hidden="true">#</a> 3. sort: <sup class="footnote-ref"><a href="#footnote4">[4]</a><a class="footnote-anchor" id="footnote-ref4"></a></sup></h3><p>Sort alignments by leftmost coordinates, or by read name when -n is used. An appropriate @HD-SO sort order header tag will be added or an existing one updated if necessary.</p><h4 id="usage" tabindex="-1"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h4><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>samtools <span class="token function">sort</span> <span class="token punctuation">[</span>-l level<span class="token punctuation">]</span> <span class="token punctuation">[</span>-u<span class="token punctuation">]</span> <span class="token punctuation">[</span>-m maxMem<span class="token punctuation">]</span> <span class="token punctuation">[</span>-o out.bam<span class="token punctuation">]</span> <span class="token punctuation">[</span>-O format<span class="token punctuation">]</span> <span class="token punctuation">[</span>-M<span class="token punctuation">]</span> <span class="token punctuation">[</span>-K kmerLen<span class="token punctuation">]</span> <span class="token punctuation">[</span>-n<span class="token punctuation">]</span> <span class="token punctuation">[</span>-t tag<span class="token punctuation">]</span> <span class="token punctuation">[</span>-T tmpprefix<span class="token punctuation">]</span> <span class="token punctuation">[</span>-@ threads<span class="token punctuation">]</span> <span class="token punctuation">[</span>in.sam<span class="token operator">|</span>in.bam<span class="token operator">|</span>in.cram<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Parameters:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">-</span>l <span class="token constant">INT</span>     Set compression level<span class="token punctuation">,</span> from <span class="token number">0</span> <span class="token punctuation">(</span>uncompressed<span class="token punctuation">)</span> to <span class="token number">9</span> <span class="token punctuation">(</span>best<span class="token punctuation">)</span> 
Set the desired compression level <span class="token keyword">for</span> the final output file<span class="token punctuation">,</span> ranging from <span class="token number">0</span> <span class="token punctuation">(</span>uncompressed<span class="token punctuation">)</span> or <span class="token number">1</span> <span class="token punctuation">(</span>fastest but minimal compression<span class="token punctuation">)</span> to <span class="token number">9</span> <span class="token punctuation">(</span>best compression but slowest to write<span class="token punctuation">)</span><span class="token punctuation">,</span> similarly to <span class="token function">gzip</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>&#39;s compression level setting<span class="token punctuation">.</span>

<span class="token operator">-</span>@ <span class="token constant">INT</span>
Set number <span class="token keyword">of</span> sorting and compression threads<span class="token punctuation">.</span> By <span class="token keyword">default</span><span class="token punctuation">,</span> operation is single<span class="token operator">-</span>threaded<span class="token punctuation">.</span>

<span class="token operator">-</span>o <span class="token constant">FILE</span>
Write the final sorted output to <span class="token constant">FILE</span><span class="token punctuation">,</span> rather than to standard output<span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-view" tabindex="-1"><a class="header-anchor" href="#_4-view" aria-hidden="true">#</a> 4. view <sup class="footnote-ref"><a href="#footnote5">[5]</a><a class="footnote-anchor" id="footnote-ref5"></a></sup></h3><p>View and convert SAM/BAM/CRAM files</p><h4 id="usage-1" tabindex="-1"><a class="header-anchor" href="#usage-1" aria-hidden="true">#</a> Usage</h4><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>samtools view <span class="token punctuation">[</span>options<span class="token punctuation">]</span> <span class="token operator">&lt;</span>in.bam<span class="token operator">&gt;|</span><span class="token operator">&lt;</span>in.sam<span class="token operator">&gt;|</span><span class="token operator">&lt;</span>in.cram<span class="token operator">&gt;</span> <span class="token punctuation">[</span>region <span class="token punctuation">..</span>.<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Parameters</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">-</span><span class="token constant">S</span>           <span class="token function">Ignored</span> <span class="token punctuation">(</span>input format is auto<span class="token operator">-</span>detected<span class="token punctuation">)</span>
<span class="token operator">-</span>b<span class="token punctuation">,</span> <span class="token operator">--</span>bam                  Output <span class="token constant">BAM</span>
<span class="token operator">-</span>@<span class="token punctuation">,</span> <span class="token operator">--</span>threads <span class="token constant">INT</span>
               Number <span class="token keyword">of</span> additional threads to use <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
<span class="token operator">-</span>o<span class="token punctuation">,</span> <span class="token operator">--</span>output <span class="token constant">FILE</span>          Write output to <span class="token constant">FILE</span> <span class="token punctuation">[</span>standard output<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="other-people-s-realated-blogs" tabindex="-1"><a class="header-anchor" href="#other-people-s-realated-blogs" aria-hidden="true">#</a> Other people&#39;s realated blogs</h3>`,22),u=n("Dave Tang: "),d={href:"https://davetang.github.io/learning_bam_file/",target:"_blank",rel:"noopener noreferrer"},h=n("Learning the BAM format"),m=s("hr",{class:"footnotes-sep"},null,-1),k={class:"footnotes"},f={class:"footnotes-list"},b={id:"footnote1",class:"footnote-item"},_={href:"http://www.htslib.org/doc/1.15/samtools.html",target:"_blank",rel:"noopener noreferrer"},v=n("http://www.htslib.org/doc/1.15/samtools.html"),g=n(),w=s("a",{href:"#footnote-ref1",class:"footnote-backref"},"\u21A9\uFE0E",-1),x={id:"footnote2",class:"footnote-item"},I={href:"http://www.htslib.org/doc/1.15/samtools-fixmate.html",target:"_blank",rel:"noopener noreferrer"},y=n("http://www.htslib.org/doc/1.15/samtools-fixmate.html"),S=n(),M=s("a",{href:"#footnote-ref2",class:"footnote-backref"},"\u21A9\uFE0E",-1),T={id:"footnote3",class:"footnote-item"},A={href:"http://www.htslib.org/doc/1.15/samtools-markdup.html",target:"_blank",rel:"noopener noreferrer"},E=n("http://www.htslib.org/doc/1.15/samtools-markdup.html"),L=n(),N=s("a",{href:"#footnote-ref3",class:"footnote-backref"},"\u21A9\uFE0E",-1),B={id:"footnote4",class:"footnote-item"},j={href:"http://www.htslib.org/doc/1.15/samtools-sort.html",target:"_blank",rel:"noopener noreferrer"},F=n("http://www.htslib.org/doc/1.15/samtools-sort.html"),O=n(),V=s("a",{href:"#footnote-ref4",class:"footnote-backref"},"\u21A9\uFE0E",-1),P={id:"footnote5",class:"footnote-item"},C={href:"http://www.htslib.org/doc/1.15/samtools-view.html",target:"_blank",rel:"noopener noreferrer"},R=n("http://www.htslib.org/doc/1.15/samtools-view.html"),D=n(),U=s("a",{href:"#footnote-ref5",class:"footnote-backref"},"\u21A9\uFE0E",-1);function W(z,H){const a=i("ExternalLinkIcon");return o(),p("div",null,[r,s("p",null,[u,s("a",d,[h,t(a)])]),m,s("section",k,[s("ol",f,[s("li",b,[s("p",null,[s("a",_,[v,t(a)]),g,w])]),s("li",x,[s("p",null,[s("a",I,[y,t(a)]),S,M])]),s("li",T,[s("p",null,[s("a",A,[E,t(a)]),L,N])]),s("li",B,[s("p",null,[s("a",j,[F,t(a)]),O,V])]),s("li",P,[s("p",null,[s("a",C,[R,t(a)]),D,U])])])])])}const q=e(l,[["render",W],["__file","filter_bam_samtools.html.vue"]]);export{q as default};
