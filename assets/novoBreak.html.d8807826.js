import{_ as t}from"./_plugin-vue_export-helper.cdc0426e.js";import{o,c as p,b as s,d as e,f as l,e as a,r}from"./app.2288e026.js";const i={},c=l(`<p><code>novoBreak</code> (v1.1) is a structural variant breakpoint detection tool described in the papers <sup class="footnote-ref"><a href="#footnote1">[1]</a><a class="footnote-anchor" id="footnote-ref1"></a></sup> <sup class="footnote-ref"><a href="#footnote2">[2]</a><a class="footnote-anchor" id="footnote-ref2"></a></sup>. The corresponding Github page is <sup class="footnote-ref"><a href="#footnote3">[3]</a><a class="footnote-anchor" id="footnote-ref3"></a></sup>. A public workflow is available here <sup class="footnote-ref"><a href="#footnote4">[4]</a><a class="footnote-anchor" id="footnote-ref4"></a></sup>.</p><p>Overall, my personal experience with <code>novoBreak</code> was painful due to limited documentation and 0 well-established tutorials.</p><h2 id="installation" tabindex="-1"><a class="header-anchor" href="#installation" aria-hidden="true">#</a> Installation</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">git</span> clone https://github.com/czc/nb_distribution.git
<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PWD</span>/nb_distribution/:<span class="token environment constant">$PATH</span>
novoBreak
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>novoBreak <span class="token operator">-</span> a tool <span class="token keyword">for</span> discovering somatic sv breakpoints
<span class="token literal-property property">Auther</span><span class="token operator">:</span> Zechen Chong <span class="token operator">&lt;</span>zchong@mdanderson<span class="token punctuation">.</span>org<span class="token operator">&gt;</span> 
<span class="token literal-property property">Version</span><span class="token operator">:</span> <span class="token number">1.1</span> <span class="token punctuation">(</span>r20151007<span class="token punctuation">)</span>
<span class="token literal-property property">Usage</span><span class="token operator">:</span>
  novoBreak <span class="token operator">-</span>i <span class="token operator">&lt;</span>tumorbam<span class="token operator">&gt;</span> <span class="token operator">-</span>c <span class="token operator">&lt;</span>normalbam<span class="token operator">&gt;</span> <span class="token operator">-</span>r <span class="token operator">&lt;</span>reference<span class="token operator">&gt;</span> <span class="token operator">-</span>o <span class="token operator">&lt;</span>output<span class="token punctuation">.</span>kmer<span class="token operator">&gt;</span> <span class="token punctuation">[</span>options<span class="token punctuation">]</span>
<span class="token literal-property property">Options</span><span class="token operator">:</span>
  <span class="token operator">-</span>h             This help
  <span class="token operator">-</span>i <span class="token operator">&lt;</span>string<span class="token operator">&gt;</span>    Tumor bam file
  <span class="token operator">-</span>c <span class="token operator">&lt;</span>string<span class="token operator">&gt;</span>    Normal bam file
  <span class="token operator">-</span>r <span class="token operator">&lt;</span>string<span class="token operator">&gt;</span>    Reference file <span class="token keyword">in</span> fasta format
  <span class="token operator">-</span>k <span class="token operator">&lt;</span>int<span class="token operator">&gt;</span>       Kmer size<span class="token punctuation">,</span> <span class="token operator">&lt;=</span><span class="token number">31</span> <span class="token punctuation">[</span><span class="token number">31</span><span class="token punctuation">]</span>
  <span class="token operator">-</span>o <span class="token operator">&lt;</span>string<span class="token operator">&gt;</span>    Output kmer
  <span class="token operator">-</span>g <span class="token operator">&lt;</span>int<span class="token operator">&gt;</span>       Output germline events <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
  <span class="token operator">-</span>m <span class="token operator">&lt;</span>int<span class="token operator">&gt;</span>       Minimum kmer count regarded <span class="token keyword">as</span> novo kmers <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token operator">**</span><span class="token operator">**</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>novoBreak <span class="token parameter variable">-i</span> <span class="token operator">&lt;</span>tumorbam<span class="token operator">&gt;</span> <span class="token parameter variable">-c</span> <span class="token operator">&lt;</span>normalbam<span class="token operator">&gt;</span> <span class="token parameter variable">-r</span> <span class="token operator">&lt;</span>reference<span class="token operator">&gt;</span> <span class="token parameter variable">-o</span> <span class="token operator">&lt;</span>output.kmer<span class="token operator">&gt;</span> <span class="token punctuation">[</span>options<span class="token punctuation">]</span>

<span class="token function">bash</span> <span class="token operator">&lt;</span>A_PATH<span class="token operator">&gt;</span>/novoBreak/run_novoBreak.sh <span class="token operator">&lt;</span>novoBreak_exe_dir<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>ref<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>tumor_bam<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>normal_bam<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>n_CPUs:INT<span class="token operator">&gt;</span> <span class="token punctuation">[</span>outputdir:-<span class="token environment constant">PWD</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">Input and output</p><p>Input:</p><ul><li>A reference sequence file of mapping results of the paired-end reads</li><li>Two bam files (tumor and normal)</li></ul><p>Output: A filtered high confident VCF file (novoBreak.pass.flt.vcf)</p></div><h2 id="filter" tabindex="-1"><a class="header-anchor" href="#filter" aria-hidden="true">#</a> Filter</h2><p>According to <sup class="footnote-ref"><a href="#footnote3">[3:1]</a><a class="footnote-anchor" id="footnote-ref3:1"></a></sup>, &quot;To increase sensitivity, novoBreak tries to infer as many SVs as possible based on the local assembly results. But many of the inferred SVs may be false positives due to misassembly or lack of enough evidence. &quot; Therefore, some default filtering is available such as the minimum SV size as 100 bp and no upper limit.</p><h2 id="debug" tabindex="-1"><a class="header-anchor" href="#debug" aria-hidden="true">#</a> Debug</h2><h3 id="problem-description" tabindex="-1"><a class="header-anchor" href="#problem-description" aria-hidden="true">#</a> Problem description</h3><p>Test to see if you can use shared library by doing</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>PATH_TO/nb_distribution/samtools
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>When we look into the <code>PATH_TO_nb_distribution</code> folder, we can see that there are several perl scripts also some softwares such as <code>samtools</code>, <code>bwa</code>, <code>SSALE</code>. The work of <code>navoBreak</code> calls the <code>samtools</code> it provided in the process. Thus, we need to ensure that the shared library works. Similar issue is addressed here: <sup class="footnote-ref"><a href="#footnote5">[5]</a><a class="footnote-anchor" id="footnote-ref5"></a></sup>.</p><p>Error message:</p><pre>error while loading shared libraries: libncurses.so.5: cannot open shared object file: No such file or directory
</pre><h3 id="solution" tabindex="-1"><a class="header-anchor" href="#solution" aria-hidden="true">#</a> Solution</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> libncurses5
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="what-is-inside-path-to-novobreak-run-novobreak-sh" tabindex="-1"><a class="header-anchor" href="#what-is-inside-path-to-novobreak-run-novobreak-sh" aria-hidden="true">#</a> What is inside <code>PATH_TO/novoBreak/run_novoBreak.sh</code>? <sup class="footnote-ref"><a href="#footnote3">[3:2]</a><a class="footnote-anchor" id="footnote-ref3:2"></a></sup></h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>

<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$#</span> <span class="token operator">!=</span> <span class="token number">5</span> <span class="token parameter variable">-a</span> <span class="token variable">$#</span> <span class="token operator">!=</span> <span class="token number">6</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
	<span class="token builtin class-name">echo</span> <span class="token variable">$0</span> <span class="token punctuation">\\</span><span class="token operator">&lt;</span>novoBreak_exe_dir<span class="token punctuation">\\</span><span class="token operator">&gt;</span> <span class="token punctuation">\\</span><span class="token operator">&lt;</span>ref<span class="token punctuation">\\</span><span class="token operator">&gt;</span> <span class="token punctuation">\\</span><span class="token operator">&lt;</span>tumor_bam<span class="token punctuation">\\</span><span class="token operator">&gt;</span> <span class="token punctuation">\\</span><span class="token operator">&lt;</span>normal_bam<span class="token punctuation">\\</span><span class="token operator">&gt;</span> <span class="token punctuation">\\</span><span class="token operator">&lt;</span>n_CPUs:INT<span class="token punctuation">\\</span><span class="token operator">&gt;</span> <span class="token punctuation">\\</span><span class="token punctuation">[</span>outputdir:-<span class="token environment constant">PWD</span><span class="token punctuation">\\</span><span class="token punctuation">]</span>
	<span class="token builtin class-name">exit</span> <span class="token number">1</span>
<span class="token keyword">fi</span>

<span class="token assign-left variable">nbbin</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span>readlink <span class="token parameter variable">-f</span> $1<span class="token variable">\`</span></span>
<span class="token assign-left variable">ref</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span>readlink <span class="token parameter variable">-f</span> $2<span class="token variable">\`</span></span>
<span class="token assign-left variable">tumor_bam</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span>readlink <span class="token parameter variable">-f</span> $3<span class="token variable">\`</span></span>
<span class="token assign-left variable">normal_bam</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span>readlink <span class="token parameter variable">-f</span> $4<span class="token variable">\`</span></span>
<span class="token assign-left variable">n_cpus</span><span class="token operator">=</span><span class="token variable">$5</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$#</span> <span class="token operator">==</span> <span class="token number">6</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
	<span class="token assign-left variable">output</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span>readlink <span class="token parameter variable">-f</span> $6<span class="token variable">\`</span></span>
<span class="token keyword">fi</span>
<span class="token assign-left variable">novobreak</span><span class="token operator">=</span><span class="token variable">$nbbin</span>/novoBreak
<span class="token assign-left variable">bwa</span><span class="token operator">=</span><span class="token variable">$nbbin</span>/bwa
<span class="token assign-left variable">samtools</span><span class="token operator">=</span><span class="token variable">$nbbin</span>/samtools

<span class="token assign-left variable">lastdir</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token builtin class-name">pwd</span><span class="token variable">\`</span></span>

<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$#</span> <span class="token operator">==</span> <span class="token number">6</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
	<span class="token function">mkdir</span> <span class="token variable">$output</span>
	<span class="token builtin class-name">cd</span> <span class="token variable">$output</span>
<span class="token keyword">fi</span>
<span class="token variable">$novobreak</span> <span class="token parameter variable">-i</span> <span class="token variable">$tumor_bam</span> <span class="token parameter variable">-c</span> <span class="token variable">$normal_bam</span> <span class="token parameter variable">-r</span> <span class="token variable">$ref</span>  <span class="token parameter variable">-o</span> kmer.stat 
<span class="token comment">#$samtools collate somaticreads.bam somaticreads.srt</span>

<span class="token function">mkdir</span> group_reads
<span class="token builtin class-name">cd</span> group_reads
<span class="token comment">#$samtools view -h ../somaticreads.srt.bam | perl $nbbin/fetch_discordant.pl - $tumor_bam &gt; discordant.sam</span>
<span class="token variable">$samtools</span> <span class="token function">sort</span> <span class="token parameter variable">-n</span> -@ <span class="token variable">$n_cpus</span> <span class="token parameter variable">-o</span> somaticreads.srtnm.bam <span class="token punctuation">..</span>/somaticreads.bam
<span class="token variable">$samtools</span> bam2fq <span class="token parameter variable">-1</span> read1.fq <span class="token parameter variable">-2</span> read2.fq  somaticreads.srtnm.bam
perl <span class="token variable">$nbbin</span>/group_bp_reads.pl <span class="token punctuation">..</span>/kmer.stat read1.fq read2.fq  <span class="token operator">&gt;</span> bp_reads.txt
<span class="token assign-left variable">cls</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token function">tail</span> <span class="token parameter variable">-1</span> bp_reads.txt <span class="token operator">|</span> <span class="token function">cut</span> <span class="token parameter variable">-f1</span><span class="token variable">\`</span></span>
<span class="token assign-left variable">rec</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token builtin class-name">echo</span> $cls/$n_cpus <span class="token operator">|</span> <span class="token function">bc</span><span class="token variable">\`</span></span>
<span class="token assign-left variable">rec</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$((</span>rec<span class="token operator">+</span><span class="token number">1</span><span class="token variable">))</span></span>
<span class="token function">mkdir</span> <span class="token function">split</span>
<span class="token builtin class-name">cd</span> <span class="token function">split</span>
<span class="token function">awk</span> <span class="token parameter variable">-v</span> <span class="token assign-left variable">rec</span><span class="token operator">=</span><span class="token variable">$rec</span> <span class="token string">&#39;{print &gt; int($1/rec)&quot;.txt&quot;}&#39;</span> <span class="token punctuation">..</span>/bp_reads.txt
<span class="token keyword">for</span> <span class="token for-or-select variable">file</span> <span class="token keyword">in</span> *.txt
<span class="token keyword">do</span>
	<span class="token builtin class-name">echo</span> <span class="token variable">$file</span>
	perl <span class="token variable">$nbbin</span>/run_ssake.pl <span class="token variable">$file</span> <span class="token operator">&gt;</span> /dev/null <span class="token operator">&amp;</span>
<span class="token keyword">done</span>
<span class="token function">wait</span>
<span class="token builtin class-name">cd</span> <span class="token punctuation">..</span>
<span class="token builtin class-name">cd</span> <span class="token punctuation">..</span>
<span class="token function">mkdir</span> ssake
<span class="token builtin class-name">cd</span> ssake
<span class="token comment">#you can split the bp_reads.txt into multiple files to run them together</span>
<span class="token comment">#perl $nbbin/run_ssake.pl ../group_reads/bp_reads.txt &gt; /dev/null</span>
<span class="token function">awk</span> <span class="token string">&#39;length($0)&gt;1&#39;</span> <span class="token punctuation">..</span>/group_reads/split/*.ssake.asm.out <span class="token operator">&gt;</span> ssake.fa
<span class="token variable">$bwa</span> mem <span class="token parameter variable">-t</span> <span class="token variable">$n_cpus</span> <span class="token parameter variable">-M</span> <span class="token variable">$ref</span> ssake.fa <span class="token operator">&gt;</span> ssake.sam
perl <span class="token variable">$nbbin</span>/infer_sv.pl ssake.sam <span class="token operator">&gt;</span> ssake.vcf
<span class="token comment">#grep -v &#39;^#&#39; ssake.vcf | sed &#39;s/|/\\t/g&#39; | sed &#39;s/read//&#39; |  awk &#39;{if(!x[$1$2]){y[$1$2]=$14;x[$1$2]=$0}else{if($14&gt;y[$1$2]){y[$1$2]=$14; x[$1$2]=$0}}}END{for(i in x){print x[i]}}&#39; | sort -k1,1 -k2,2n  | perl -ne &#39;if(/TRA/){print}elsif(/SVLEN=(\\d+)/){if($1&gt;100){print $_}}elsif(/SVLEN=-(\\d+)/){if($1&gt;100){print}}&#39; &gt; ssake.pass.vcf</span>
<span class="token function">grep</span> <span class="token parameter variable">-v</span> <span class="token string">&#39;^#&#39;</span> ssake.vcf <span class="token operator">|</span> <span class="token function">awk</span>  <span class="token parameter variable">-v</span> <span class="token assign-left variable">OFS</span><span class="token operator">=</span><span class="token string">&quot;<span class="token entity" title="\\t">\\t</span>&quot;</span> <span class="token string">&#39;{gsub(/\\|/, &quot;\\t&quot;, $11); print}&#39;</span> <span class="token operator">|</span> <span class="token function">sed</span> <span class="token string">&#39;s/read//&#39;</span> <span class="token operator">|</span>  <span class="token function">awk</span> <span class="token string">&#39;{if(!x[$1$2]){y[$1$2]=$14;x[$1$2]=$0}else{if($14&gt;y[$1$2]){y[$1$2]=$14; x[$1$2]=$0}}}END{for(i in x){print x[i]}}&#39;</span> <span class="token operator">|</span> <span class="token function">sort</span> -k1,1 -k2,2n  <span class="token operator">|</span> perl <span class="token parameter variable">-ne</span> <span class="token string">&#39;if(/TRA/){print}elsif(/SVLEN=(\\d+)/){if($1&gt;100){print $_}}elsif(/SVLEN=-(\\d+)/){if($1&gt;100){print}}&#39;</span> <span class="token operator">&gt;</span> ssake.pass.vcf
<span class="token comment">#you can split the ssake.pass.vcf into multiple files to run them together</span>
<span class="token assign-left variable">num</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token function">wc</span> <span class="token parameter variable">-l</span> ssake.pass.vcf <span class="token operator">|</span> <span class="token function">cut</span> <span class="token parameter variable">-f1</span> -d<span class="token string">&#39; &#39;</span><span class="token variable">\`</span></span>
<span class="token assign-left variable">rec</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token builtin class-name">echo</span> $num/$n_cpus <span class="token operator">|</span> <span class="token function">bc</span><span class="token variable">\`</span></span>
<span class="token assign-left variable">rec</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$((</span>rec<span class="token operator">+</span><span class="token number">1</span><span class="token variable">))</span></span>
<span class="token function">mkdir</span> <span class="token function">split</span>
<span class="token builtin class-name">cd</span> <span class="token function">split</span>
<span class="token function">split</span> <span class="token parameter variable">-l</span> <span class="token variable">$rec</span> <span class="token punctuation">..</span>/ssake.pass.vcf <span class="token comment"># set proper split parameters when needed</span>
<span class="token keyword">for</span> <span class="token for-or-select variable">file</span> <span class="token keyword">in</span> x??
<span class="token keyword">do</span>
	<span class="token builtin class-name">echo</span> <span class="token variable">$file</span>
	perl <span class="token variable">$nbbin</span>/infer_bp_v4.pl <span class="token variable">$file</span> <span class="token variable">$tumor_bam</span> <span class="token variable">$normal_bam</span> <span class="token operator">&gt;</span> <span class="token variable">$file</span>.sp.vcf <span class="token operator">&amp;</span>
<span class="token keyword">done</span>
<span class="token function">wait</span>
<span class="token builtin class-name">cd</span> <span class="token punctuation">..</span>

<span class="token comment">##below is a naive filter, pay attention to it</span>
<span class="token comment">#perl $nbbin/filter_sv_icgc.pl nbasm.pass.sp.vcf &gt; ../novoBreak.pass.flt.vcf</span>
<span class="token function">grep</span> <span class="token string">&#39;^#&#39;</span> ssake.vcf <span class="token operator">&gt;</span> header.txt	
perl <span class="token variable">$nbbin</span>/filter_sv_icgc.pl split/*.sp.vcf <span class="token operator">|</span> <span class="token function">cat</span> header.txt - <span class="token operator">&gt;</span> <span class="token punctuation">..</span>/novoBreak.pass.flt.vcf
<span class="token builtin class-name">cd</span> <span class="token punctuation">..</span>
<span class="token builtin class-name">cd</span> <span class="token variable">$lastdir</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container danger"><p class="custom-container-title">Interpret results</p><p>It is very frustrated that I did not find other blogs or tutorials about <code>novoBreak</code> examples. Using my data, I see zero variants in <code>novoBreak.pass.flt.vcf</code>. Thus, I had to dig into <code>PATH_TO/novoBreak/run_novoBreak.sh</code> and check the results of each step. Every step includes variants up to <code>split/*.sp.vcf</code>. The step <code>perl $nbbin/filter_sv_icgc.pl split/*.sp.vcf | cat header.txt - &gt; ../novoBreak.pass.flt.vcf</code> is acting weird, which only output vcf headers to <code>novoBreak.pass.flt.vcf</code>.</p></div><h2 id="reference" tabindex="-1"><a class="header-anchor" href="#reference" aria-hidden="true">#</a> Reference</h2>`,23),d=s("code",null,"gGnome",-1),k=a(": a flexible, queriable R interface to graphs and walks of genomic intervals tutorial: "),u={href:"http://mskilab.com/gGnome/tutorial.html",target:"_blank",rel:"noopener noreferrer"},v=a("http://mskilab.com/gGnome/tutorial.html"),b=a("Summary tools: "),m={href:"http://www.geneclub.net.cn/info/archives/13753",target:"_blank",rel:"noopener noreferrer"},f=a("http://www.geneclub.net.cn/info/archives/13753"),h=s("hr",{class:"footnotes-sep"},null,-1),g={class:"footnotes"},_={class:"footnotes-list"},$={id:"footnote1",class:"footnote-item"},w={href:"https://www.nature.com/articles/nmeth.4084",target:"_blank",rel:"noopener noreferrer"},y=a("https://www.nature.com/articles/nmeth.4084"),x=a(),B=s("a",{href:"#footnote-ref1",class:"footnote-backref"},"\u21A9\uFE0E",-1),T={id:"footnote2",class:"footnote-item"},q={href:"https://pubmed.ncbi.nlm.nih.gov/30039369/",target:"_blank",rel:"noopener noreferrer"},A=a("https://pubmed.ncbi.nlm.nih.gov/30039369/"),N=a(),S=s("a",{href:"#footnote-ref2",class:"footnote-backref"},"\u21A9\uFE0E",-1),P={id:"footnote3",class:"footnote-item"},V={href:"https://github.com/czc/nb_distribution",target:"_blank",rel:"noopener noreferrer"},E=a("https://github.com/czc/nb_distribution"),I=a(),O=s("a",{href:"#footnote-ref3",class:"footnote-backref"},"\u21A9\uFE0E",-1),H=a(),z=s("a",{href:"#footnote-ref3:1",class:"footnote-backref"},"\u21A9\uFE0E",-1),C=a(),L=s("a",{href:"#footnote-ref3:2",class:"footnote-backref"},"\u21A9\uFE0E",-1),D={id:"footnote4",class:"footnote-item"},G={href:"https://cgc.sbgenomics.com/public/apps/ZCHONG/novobreak-commit/novobreak-analysis",target:"_blank",rel:"noopener noreferrer"},R=a("https://cgc.sbgenomics.com/public/apps/ZCHONG/novobreak-commit/novobreak-analysis"),U=a(),W=s("a",{href:"#footnote-ref4",class:"footnote-backref"},"\u21A9\uFE0E",-1),j={id:"footnote5",class:"footnote-item"},F={href:"https://stackoverflow.com/questions/17005654/error-while-loading-shared-libraries-libncurses-so-5",target:"_blank",rel:"noopener noreferrer"},Z=a("https://stackoverflow.com/questions/17005654/error-while-loading-shared-libraries-libncurses-so-5"),M=a(),K=s("a",{href:"#footnote-ref5",class:"footnote-backref"},"\u21A9\uFE0E",-1);function J(Q,X){const n=r("ExternalLinkIcon");return o(),p("div",null,[c,s("ol",null,[s("li",null,[d,k,s("a",u,[v,e(n)])]),s("li",null,[b,s("a",m,[f,e(n)])])]),h,s("section",g,[s("ol",_,[s("li",$,[s("p",null,[s("a",w,[y,e(n)]),x,B])]),s("li",T,[s("p",null,[s("a",q,[A,e(n)]),N,S])]),s("li",P,[s("p",null,[s("a",V,[E,e(n)]),I,O,H,z,C,L])]),s("li",D,[s("p",null,[s("a",G,[R,e(n)]),U,W])]),s("li",j,[s("p",null,[s("a",F,[Z,e(n)]),M,K])])])])])}const as=t(i,[["render",J],["__file","novoBreak.html.vue"]]);export{as as default};
