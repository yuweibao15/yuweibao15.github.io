import{_ as t}from"./_plugin-vue_export-helper.cdc0426e.js";import{o,c as i,b as e,d as n,f as l,e as s,r}from"./app.4a9d5c55.js";const d={},c=l(`<p>The very first step of variant calling analysis is to align <code>sequences.fastq</code> to its reference genome <code>reference_genome.fasta</code>.</p><p>This can be done using the <code>bwa</code> <sup class="footnote-ref"><a href="#footnote1">[1]</a><a class="footnote-anchor" id="footnote-ref1"></a></sup> then followed by the tool <code>samtools</code> <sup class="footnote-ref"><a href="#footnote2">[2]</a><a class="footnote-anchor" id="footnote-ref2"></a></sup></p><h2 id="bwa" tabindex="-1"><a class="header-anchor" href="#bwa" aria-hidden="true">#</a> <code>bwa</code></h2><p>For example, to align illumina paired-ends reads to its reference genome using <code>bwa mem</code> algorithm:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>bwa mem reference_genome.fasta read1.fastq read2.fastq <span class="token operator">&gt;</span> output.sam
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>However, we want to convert sam to bam to save disc space, add additional information, mark duplicates, and index the bam file prior to use variant calling tools. Thus, we use <code>samtools</code>.</p><h2 id="samtools" tabindex="-1"><a class="header-anchor" href="#samtools" aria-hidden="true">#</a> <code>samtools</code></h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>samtools view <span class="token comment"># Convert SAM to BAM</span>
samtools <span class="token function">sort</span> <span class="token comment"># Sort the BAM files according to their placement in the reference genome</span>
samtools index <span class="token comment"># Index the BAM files</span>
samtools merge <span class="token comment"># Merge multiple sorted BAM into a single BAM</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="use-bwa-and-samtools-together-without-saving-the-intermediate-sam-files" tabindex="-1"><a class="header-anchor" href="#use-bwa-and-samtools-together-without-saving-the-intermediate-sam-files" aria-hidden="true">#</a> Use <code>bwa</code> and <code>samtools</code> together without saving the intermediate SAM files</h2><p>Reference: Dr. Eric C. Anderson&#39;s Bioinformatics Handbook <sup class="footnote-ref"><a href="#footnote3">[3]</a><a class="footnote-anchor" id="footnote-ref3"></a></sup></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>bwa mem genome.fna R1.fq R2.fq <span class="token operator">|</span>
  samtools view <span class="token parameter variable">-u</span> -  <span class="token operator">|</span>   <span class="token comment"># convert the SAM output from bwa mem into BAM format</span>
  samtools <span class="token function">sort</span> <span class="token parameter variable">-l</span> <span class="token number">9</span>  - <span class="token parameter variable">-o</span> output_file.bam  <span class="token comment"># take stdin as the input, sort it, and write (with the best</span>
                                        <span class="token comment"># compression possible: -l 9) the output to output_file.bam</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="practice-with-one-job-in-one-step" tabindex="-1"><a class="header-anchor" href="#practice-with-one-job-in-one-step" aria-hidden="true">#</a> Practice with one job in one step</h3><p>Get the example SAM data:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> results/sam
<span class="token function">wget</span> https://eriqande.github.io/eca-bioinf-handbook/downloads/s001---1.sam
<span class="token function">mv</span> s001---1.sam results/sam/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Convert SAM to BAM:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>samtools view <span class="token parameter variable">-b</span> results/sam/s001---1.sam <span class="token operator">&gt;</span> results/sam/s001---1.bam
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Compare the size of SAM and BAM:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">du</span> <span class="token parameter variable">-h</span> results/sam/*
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Read the alignments in a BAM file (without header)</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>samtools view results/sam/s001---1.bam
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Read the alignments in a BAM file (with header)</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>samtools view <span class="token parameter variable">-h</span> results/sam/s001---1.bam
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Read only the header in a BAM file</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>samtools view <span class="token parameter variable">-H</span> results/sam/s001---1.bam
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Sort the BAM file in order of their placement in the reference genome</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>samtools <span class="token function">sort</span> <span class="token parameter variable">-l</span> <span class="token number">9</span> <span class="token parameter variable">-o</span> results/sam/s001---1.srt.bam results/sam/s001---1.bam
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Check how <code>samtools sort</code> makes changes:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>samtools view <span class="token parameter variable">-H</span> results/sam/s001---1.srt.bam <span class="token operator">|</span> <span class="token function">head</span>    <span class="token comment"># @HD	VN:1.6	SO:coordinate</span>
samtools view <span class="token parameter variable">-H</span> results/sam/s001---1.srt.bam <span class="token operator">|</span> <span class="token function">tail</span> <span class="token parameter variable">-n</span> <span class="token number">10</span>  <span class="token comment"># @PG line stored the commands</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Index a bam:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>samtools index results/sam/s001---1.srt.bam     <span class="token comment"># Create s001---1.srt.bam.bai</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Merge multiple sorted BAM files into a single BAM file:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>samtools merge <span class="token punctuation">[</span>options<span class="token punctuation">]</span> output-bam-name.bam  sorted-input-bam-1.bam sorted-input-bam-2.bam <span class="token punctuation">..</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Check the mapping statistics on a BAM:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>samtools flagstats results/sam/s001---1.srt.bam
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="practice-with-multiple-jobs-in-one-step" tabindex="-1"><a class="header-anchor" href="#practice-with-multiple-jobs-in-one-step" aria-hidden="true">#</a> Practice with multiple jobs in one step</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># remove the .bam .srt.bam files:</span>
<span class="token function">rm</span> results/sam/s001---1.bam results/sam/s001---1.srt.bam

<span class="token comment"># now, directly make a sorted BAM file at results/sam/s001---1.srt.bam</span>
<span class="token comment"># by piping samtools view output into samtools sort.  Note the use</span>
<span class="token comment"># of -u for uncompressed BAM output, and the - at the end of the</span>
<span class="token comment"># line, instead of a file name, to mean take</span>
<span class="token comment"># input from stdin instead of a file</span>
samtools view <span class="token parameter variable">-u</span> results/sam/s001---1.sam <span class="token operator">|</span> <span class="token punctuation">\\</span>
  samtools <span class="token function">sort</span> <span class="token parameter variable">-l</span> <span class="token number">9</span> <span class="token parameter variable">-o</span> results/sam/s001---1.srt.bam -
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr class="footnotes-sep">`,37),m={class:"footnotes"},p={class:"footnotes-list"},u={id:"footnote1",class:"footnote-item"},h={href:"https://github.com/lh3/bwa",target:"_blank",rel:"noopener noreferrer"},b=s("https://github.com/lh3/bwa"),v=s(),f=e("a",{href:"#footnote-ref1",class:"footnote-backref"},"\u21A9\uFE0E",-1),g={id:"footnote2",class:"footnote-item"},k={href:"https://github.com/samtools/samtools",target:"_blank",rel:"noopener noreferrer"},_=s("https://github.com/samtools/samtools"),w=s(),x=e("a",{href:"#footnote-ref2",class:"footnote-backref"},"\u21A9\uFE0E",-1),M={id:"footnote3",class:"footnote-item"},A={href:"https://eriqande.github.io/eca-bioinf-handbook/alignment-of-sequence-data-to-a-reference-genome-and-associated-steps.html#aligning-reads-with-bwa",target:"_blank",rel:"noopener noreferrer"},B=s("https://eriqande.github.io/eca-bioinf-handbook/alignment-of-sequence-data-to-a-reference-genome-and-associated-steps.html#aligning-reads-with-bwa"),q=s(),S=e("a",{href:"#footnote-ref3",class:"footnote-backref"},"\u21A9\uFE0E",-1);function C(j,y){const a=r("ExternalLinkIcon");return o(),i("div",null,[c,e("section",m,[e("ol",p,[e("li",u,[e("p",null,[e("a",h,[b,n(a)]),v,f])]),e("li",g,[e("p",null,[e("a",k,[_,n(a)]),w,x])]),e("li",M,[e("p",null,[e("a",A,[B,n(a)]),q,S])])])])])}const R=t(d,[["render",C],["__file","bwa.html.vue"]]);export{R as default};
