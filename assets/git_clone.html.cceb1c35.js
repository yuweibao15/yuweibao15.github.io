import{_ as o}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as i,c as r,b as e,d as n,f as t,e as s,r as d}from"./app.d286016f.js";const c={},h=t(`<h2 id="standard-git-clone" tabindex="-1"><a class="header-anchor" href="#standard-git-clone" aria-hidden="true">#</a> Standard git clone</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">git</span> clone https://github.com/REPO_YOU_WANT_TO_GET.git
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><pre>Cloning into &#39;REPO_NAME&#39;...
Username for &#39;https://github.com&#39;: INPUT_GITHUB_USER_NAME
Password for ...
remote: Support for password authentication was removed on August 13, 2021.
remote: Please see https://docs.github.com/en/get-started/getting-started-with-git/about-remote-repositories#cloning-with-https-urls for information on currently recommended modes of authentication.
fatal: Authentication failed for &#39;https://github.com/REPO_YOU_WANT_TO_GET.git/&#39;
</pre><h2 id="how-to-fix-that" tabindex="-1"><a class="header-anchor" href="#how-to-fix-that" aria-hidden="true">#</a> How to fix that?</h2><p><strong>Long story short, the password above prompt asked was the token rather than the Github account password</strong></p><h3 id="generate-a-token" tabindex="-1"><a class="header-anchor" href="#generate-a-token" aria-hidden="true">#</a> Generate a token</h3><p>On the Github page, go to <code>Settings -&gt; Developer Settings -&gt; Personal access tokens -&gt; Tokens(classic) -&gt; Generate new token</code></p><p>Once generated a new token, go back to terminal, do</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">git</span> clone https://github.com/REPO_YOU_WANT_TO_GET.git
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>And put the token as the password. DONE!</p><h2 id="long-attempt-that-doesn-t-work" tabindex="-1"><a class="header-anchor" href="#long-attempt-that-doesn-t-work" aria-hidden="true">#</a> Long attempt that doesn&#39;t work...</h2><h3 id="_0-checking-for-existing-ssh-keys" tabindex="-1"><a class="header-anchor" href="#_0-checking-for-existing-ssh-keys" aria-hidden="true">#</a> 0. Checking for existing SSH keys <sup class="footnote-ref"><a href="#footnote1">[1]</a><a class="footnote-anchor" id="footnote-ref1"></a></sup></h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">ls</span> <span class="token parameter variable">-al</span> ~/.ssh <span class="token comment"># Lists the files in your .ssh directory, if they exist</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><p>If you don&#39;t have a supported public and private key pair, or don&#39;t wish to use any that are available, generate a new SSH key.</p></li><li><p>If you see an existing public and private key pair listed (for example, <code>id_rsa.pub</code> and <code>id_rsa</code>) that you would like to use to connect to GitHub, you can add the key to the ssh-agent.</p></li></ul><h3 id="_1-generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent" tabindex="-1"><a class="header-anchor" href="#_1-generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent" aria-hidden="true">#</a> 1. Generating a new SSH key and adding it to the ssh-agent <sup class="footnote-ref"><a href="#footnote2">[2]</a><a class="footnote-anchor" id="footnote-ref2"></a></sup></h3><h4 id="generate" tabindex="-1"><a class="header-anchor" href="#generate" aria-hidden="true">#</a> Generate</h4><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>ssh-keygen <span class="token parameter variable">-t</span> rsa <span class="token parameter variable">-b</span> <span class="token number">4096</span> <span class="token parameter variable">-C</span> <span class="token string">&quot;your_email@example.com&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><pre>Generating public/private rsa key pair.
Enter file in which to save the key (~/.ssh/id_rsa): ~/.ssh/id_rsa_github
Enter passphrase (empty for no passphrase): PUT_SOMTHING_HERE
Enter same passphrase again: PUT_SOMTHING_HERE
Your identification has been saved in ~/.ssh//id_rsa_github
Your public key has been saved in ~/.ssh//id_rsa_github.pub
The key fingerprint is: SECRETE
The key&#39;s randomart image is:
</pre><p>This step will generate private key <code>id_rsa</code> and public key <code>id_rsa.pub</code>.</p><h3 id="_2-add-ssh-key-to-the-ssh-agent" tabindex="-1"><a class="header-anchor" href="#_2-add-ssh-key-to-the-ssh-agent" aria-hidden="true">#</a> 2. Add SSH key to the ssh-agent</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token builtin class-name">eval</span> <span class="token string">&quot;<span class="token variable"><span class="token variable">$(</span>ssh-agent <span class="token parameter variable">-s</span><span class="token variable">)</span></span>&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><pre>Agent pid XXXX
</pre><p>Then modify config file to automatically load keys into the ssh-agent and store passphrases in your keychain.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">nano</span> ~/.ssh/config
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Inside <code>config</code></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>Host github.com
  AddKeysToAgent <span class="token function">yes</span>
  UseKeychain <span class="token function">yes</span>
  IdentityFile ~/.ssh/id_rsa_github
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Then</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>ssh-add ~/.ssh/id_rsa_github
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3-add-a-new-ssh-key-to-your-github-account" tabindex="-1"><a class="header-anchor" href="#_3-add-a-new-ssh-key-to-your-github-account" aria-hidden="true">#</a> 3. Add a new SSH key to your GitHub account <sup class="footnote-ref"><a href="#footnote3">[3]</a><a class="footnote-anchor" id="footnote-ref3"></a></sup></h3>`,29),l=s("After you generate an SSH key pair, you must add the public key to "),u={href:"http://GitHub.com",target:"_blank",rel:"noopener noreferrer"},p=s("GitHub.com"),g=s(" to enable SSH access for your account."),b=t(`<p>Obtain the public key:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">cat</span> ~/.ssh/id_rsa_github.pub
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Then go to the Github page, <code>Settings -&gt; SSH and GPG keys -&gt; New SSH key</code>, paste the public key starting with <code>ssh-rsa</code>, then click <code>Add SHH key</code></p><h3 id="result" tabindex="-1"><a class="header-anchor" href="#result" aria-hidden="true">#</a> Result:</h3><p>This attempt failed when I tried to clone via SSH</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">git</span> clone git@github.com:THE_REPO_I_WANT.git
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><pre>Cloning into &#39;GitRepo_name&#39;...
~/.ssh/config: line 3: Bad configuration option: usekeychain
~/.ssh/config: terminating, 1 bad configuration options
fatal: Could not read from remote repository.
</pre><hr class="footnotes-sep">`,8),f={class:"footnotes"},_={class:"footnotes-list"},m={id:"footnote1",class:"footnote-item"},k={href:"https://docs.github.com/en/authentication/connecting-to-github-with-ssh/checking-for-existing-ssh-keys",target:"_blank",rel:"noopener noreferrer"},v=s("https://docs.github.com/en/authentication/connecting-to-github-with-ssh/checking-for-existing-ssh-keys"),y=s(),w=e("a",{href:"#footnote-ref1",class:"footnote-backref"},"\u21A9\uFE0E",-1),x={id:"footnote2",class:"footnote-item"},S={href:"https://docs.github.com/en/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent",target:"_blank",rel:"noopener noreferrer"},T=s("https://docs.github.com/en/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent"),E=s(),H=e("a",{href:"#footnote-ref2",class:"footnote-backref"},"\u21A9\uFE0E",-1),G={id:"footnote3",class:"footnote-item"},O={href:"https://docs.github.com/en/authentication/connecting-to-github-with-ssh/adding-a-new-ssh-key-to-your-github-account",target:"_blank",rel:"noopener noreferrer"},A=s("https://docs.github.com/en/authentication/connecting-to-github-with-ssh/adding-a-new-ssh-key-to-your-github-account"),N=s(),I=e("a",{href:"#footnote-ref3",class:"footnote-backref"},"\u21A9\uFE0E",-1);function P(R,U){const a=d("ExternalLinkIcon");return i(),r("div",null,[h,e("p",null,[l,e("a",u,[p,n(a)]),g]),b,e("section",f,[e("ol",_,[e("li",m,[e("p",null,[e("a",k,[v,n(a)]),y,w])]),e("li",x,[e("p",null,[e("a",S,[T,n(a)]),E,H])]),e("li",G,[e("p",null,[e("a",O,[A,n(a)]),N,I])])])])])}const L=o(c,[["render",P],["__file","git_clone.html.vue"]]);export{L as default};
