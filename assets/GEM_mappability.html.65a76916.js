import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o,c as i,b as a,d as s,f as r,e,r as l}from"./app.03a8b120.js";const p={},d=r(`<p>GEM mappability <sup class="footnote-ref"><a href="#footnote1">[1]</a><a class="footnote-anchor" id="footnote-ref1"></a></sup> is a tool to estimate genome mappability and here is a tutorial by Dmytro Kryvokhyzha <sup class="footnote-ref"><a href="#footnote2">[2]</a><a class="footnote-anchor" id="footnote-ref2"></a></sup>. Thanks to Nick Riddiford for sharing his insights and scripts <sup class="footnote-ref"><a href="#footnote3">[3]</a><a class="footnote-anchor" id="footnote-ref3"></a></sup>.</p><h2 id="why-do-we-want-to-obtain-the-genome-mappable-region" tabindex="-1"><a class="header-anchor" href="#why-do-we-want-to-obtain-the-genome-mappable-region" aria-hidden="true">#</a> Why do we want to obtain the genome mappable region?</h2><p>In the paper <em>Fast Computation and Applications of Genome Mappability</em> <sup class="footnote-ref"><a href="#footnote1">[1:1]</a><a class="footnote-anchor" id="footnote-ref1:1"></a></sup>, the authors mentioned these three major reasons:</p><ol><li>Mappability information can be used as a prior to optimize an HTS experiment then to increase the number of uniquely mappable reads.</li><li>Mappability information is essential when producing qualitative estimates.</li><li>Mappability information is important when there is a need to re-sequence a particualr genomic region, or to produce quantitative estimates of transcript abundance from RNASeq experiments.</li></ol><h2 id="how-do-we-obtain-the-genome-mappable-region" tabindex="-1"><a class="header-anchor" href="#how-do-we-obtain-the-genome-mappable-region" aria-hidden="true">#</a> How do we obtain the genome mappable region?</h2><p>Following the tutorial by Dmytro Kryvokhyzha <sup class="footnote-ref"><a href="#footnote2">[2:1]</a><a class="footnote-anchor" id="footnote-ref2:1"></a></sup>, we can get <code>GEM</code> mappability and convert it to <code>BED</code> file.</p><h3 id="_1-download-gem-library" tabindex="-1"><a class="header-anchor" href="#_1-download-gem-library" aria-hidden="true">#</a> 1. Download GEM library</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">wget</span> http://barnaserver.com/gemtools/releases/GEMTools-static-i3-1.7.1.tar.gz
<span class="token function">tar</span> <span class="token parameter variable">-xvf</span> GEMTools-static-i3-1.7.1.tar.gz
<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span>:/PATH_TO/gemtools-1.7.1-i3/bin
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-estimate-gem-mappability" tabindex="-1"><a class="header-anchor" href="#_2-estimate-gem-mappability" aria-hidden="true">#</a> 2. Estimate GEM mappability</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>gem-indexer <span class="token parameter variable">-T</span> <span class="token number">10</span> <span class="token parameter variable">-i</span> reference.genome.fa <span class="token parameter variable">-o</span> OUT_FOLDER/PREFIX
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">gem-indexer Parameters</p><table><thead><tr><th>Parameter</th><th>Meaning</th><th>Other info</th></tr></thead><tbody><tr><td>-i</td><td>input_file</td><td>(mandatory)</td></tr><tr><td>-o</td><td>index_output_prefix</td><td>(mandatory)</td></tr><tr><td>-T --threads</td><td>thread_number</td><td>(for the BWT generator, default=1)</td></tr></tbody></table></div><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>gem-mappability <span class="token parameter variable">-T</span> <span class="token number">10</span> <span class="token parameter variable">-I</span> OUT_FOLDER/PREFIX.gem <span class="token parameter variable">-l</span> <span class="token number">150</span> <span class="token parameter variable">-o</span> OUT_FOLDER/PREFIX_mappability_150
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">gem-mappability Parameters</p><table><thead><tr><th>Parameter</th><th>Meaning</th><th>Other info</th></tr></thead><tbody><tr><td>-I</td><td>index_prefix</td><td>(mandatory)</td></tr><tr><td>-l</td><td>read_length</td><td>(mandatory)</td></tr><tr><td>-o</td><td>output_prefix</td><td>(mandatory)</td></tr><tr><td>-T</td><td>thread_number</td><td>(default=1)</td></tr></tbody></table></div><p>The reasons Dmytro use <code>-T 10</code> and <code>-l 150</code>: &quot;I used a 150bp kmer size because my data was generated with 150bp read length. Also, I run it on 10 cores (-T 10). You can change these options to fit your needs.&quot;</p><h3 id="_3-convert-gem-mappability-to-bed" tabindex="-1"><a class="header-anchor" href="#_3-convert-gem-mappability-to-bed" aria-hidden="true">#</a> 3. Convert GEM mappability to BED</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>gem-2-wig <span class="token parameter variable">-I</span> OUT_FOLDER/PREFIX.gem <span class="token parameter variable">-i</span> OUT_FOLDER/PREFIX_mappability_150.gem.mappability <span class="token parameter variable">-o</span> OUT_FOLDER/PREFIX_mappability
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">gem-2-wig Parameters</p><table><thead><tr><th>Parameter</th><th>Meaning</th><th>Other info</th></tr></thead><tbody><tr><td>-I --index</td><td>archive_file</td><td>(mandatory)</td></tr><tr><td>-l --input</td><td>mappability_file</td><td>(mandatory)</td></tr><tr><td>-o</td><td>output_prefix</td><td>(mandatory)</td></tr></tbody></table></div><h3 id="_4-merge-overlapping-intervals-in-bed" tabindex="-1"><a class="header-anchor" href="#_4-merge-overlapping-intervals-in-bed" aria-hidden="true">#</a> 4. Merge overlapping intervals in BED</h3><p>Dmytro wrote a python script <sup class="footnote-ref"><a href="#footnote4">[4]</a><a class="footnote-anchor" id="footnote-ref4"></a></sup> to merge overlapping mappability intervals.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>python ~/git/genotype-files-manipulations/combine_overlapping_BEDintervals.py <span class="token parameter variable">-i</span> OUT_FOLDER/PREFIX_mappability_150.bed <span class="token parameter variable">-o</span> OUT_FOLDER/PREFIX_mappability_150.merged.bed <span class="token parameter variable">-v</span> <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>where <code>-v</code> defines the overhang size between intervals.</p><p>For more details, please visit Dmytro Kryvokhyzha&#39;s post: <sup class="footnote-ref"><a href="#footnote2">[2:2]</a><a class="footnote-anchor" id="footnote-ref2:2"></a></sup></p><h2 id="summary-script" tabindex="-1"><a class="header-anchor" href="#summary-script" aria-hidden="true">#</a> Summary script</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token comment"># Input files</span>
<span class="token assign-left variable">ref</span><span class="token operator">=</span>reference.genome.fa
<span class="token assign-left variable">out</span><span class="token operator">=</span>PATH_TO_OUTPUT
<span class="token assign-left variable">pre</span><span class="token operator">=</span>dml6

<span class="token comment"># Personalize parameters: threads (N) and read length (RL)</span>
<span class="token assign-left variable">N</span><span class="token operator">=</span><span class="token number">10</span>
<span class="token assign-left variable">RL</span><span class="token operator">=</span><span class="token number">150</span>

gem-indexer <span class="token parameter variable">-T</span> <span class="token variable">$N</span> <span class="token parameter variable">-i</span> <span class="token variable">$ref</span> <span class="token parameter variable">-o</span> <span class="token variable">$out</span>/<span class="token variable">$pre</span>
gem-mappability <span class="token parameter variable">-T</span> <span class="token variable">$N</span> <span class="token parameter variable">-I</span> <span class="token variable">$out</span>/<span class="token variable">$pre</span>.gem <span class="token parameter variable">-l</span> <span class="token variable">$RL</span> <span class="token parameter variable">-o</span> <span class="token variable">$out</span>/<span class="token variable">$pre</span><span class="token punctuation">\\</span>_mappability<span class="token punctuation">\\</span>_<span class="token variable">$RL</span>
gem-2-wig <span class="token parameter variable">-I</span> <span class="token variable">$out</span>/<span class="token variable">$pre</span>.gem <span class="token parameter variable">-i</span> <span class="token variable">$out</span>/<span class="token variable">$pre</span><span class="token punctuation">\\</span>_mappability<span class="token punctuation">\\</span>_<span class="token variable">$RL</span>.gem.mappability <span class="token parameter variable">-o</span> <span class="token variable">$out</span>/<span class="token variable">$pre</span><span class="token punctuation">\\</span>_mappability
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr class="footnotes-sep">`,25),c={class:"footnotes"},m={class:"footnotes-list"},b={id:"footnote1",class:"footnote-item"},h={href:"https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0030377",target:"_blank",rel:"noopener noreferrer"},f=e("https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0030377"),u=e(),v=a("a",{href:"#footnote-ref1",class:"footnote-backref"},"\u21A9\uFE0E",-1),_=e(),g=a("a",{href:"#footnote-ref1:1",class:"footnote-backref"},"\u21A9\uFE0E",-1),k={id:"footnote2",class:"footnote-item"},y={href:"https://evodify.com/gem-mappability/",target:"_blank",rel:"noopener noreferrer"},E=e("https://evodify.com/gem-mappability/"),x=e(),T=a("a",{href:"#footnote-ref2",class:"footnote-backref"},"\u21A9\uFE0E",-1),w=e(),R=a("a",{href:"#footnote-ref2:1",class:"footnote-backref"},"\u21A9\uFE0E",-1),I=e(),O=a("a",{href:"#footnote-ref2:2",class:"footnote-backref"},"\u21A9\uFE0E",-1),D={id:"footnote3",class:"footnote-item"},P={href:"https://github.com/nriddiford/Investigating-structural-variation-in-cancer-genomes/blob/master/GenomeMappability.md",target:"_blank",rel:"noopener noreferrer"},F=e("https://github.com/nriddiford/Investigating-structural-variation-in-cancer-genomes/blob/master/GenomeMappability.md"),M=e(),$=a("a",{href:"#footnote-ref3",class:"footnote-backref"},"\u21A9\uFE0E",-1),L={id:"footnote4",class:"footnote-item"},G={href:"https://github.com/evodify/genotype-files-manipulations/blob/master/combine_overlapping_BEDintervals.py",target:"_blank",rel:"noopener noreferrer"},B=e("https://github.com/evodify/genotype-files-manipulations/blob/master/combine_overlapping_BEDintervals.py"),N=e(),U=a("a",{href:"#footnote-ref4",class:"footnote-backref"},"\u21A9\uFE0E",-1);function z(X,q){const t=l("ExternalLinkIcon");return o(),i("div",null,[d,a("section",c,[a("ol",m,[a("li",b,[a("p",null,[a("a",h,[f,s(t)]),u,v,_,g])]),a("li",k,[a("p",null,[a("a",y,[E,s(t)]),x,T,w,R,I,O])]),a("li",D,[a("p",null,[a("a",P,[F,s(t)]),M,$])]),a("li",L,[a("p",null,[a("a",G,[B,s(t)]),N,U])])])])])}const j=n(p,[["render",z],["__file","GEM_mappability.html.vue"]]);export{j as default};
