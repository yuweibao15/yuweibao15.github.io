import{_ as e}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as t,c as p,f as n,b as s,e as a}from"./app.4adc157d.js";const l={},i=n(`<p>What tools can we use to do numerical integration?</p><h2 id="python-scipy-integrate" tabindex="-1"><a class="header-anchor" href="#python-scipy-integrate" aria-hidden="true">#</a> Python scipy.integrate</h2><h3 id="purpose" tabindex="-1"><a class="header-anchor" href="#purpose" aria-hidden="true">#</a> Purpose</h3><p>Solve a double integral numerically.</p><h3 id="installation" tabindex="-1"><a class="header-anchor" href="#installation" aria-hidden="true">#</a> Installation</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>pip <span class="token function">install</span> scripy
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="usage-examples" tabindex="-1"><a class="header-anchor" href="#usage-examples" aria-hidden="true">#</a> Usage Examples</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>help<span class="token punctuation">(</span>integrate<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_1-simple-single-integral" tabindex="-1"><a class="header-anchor" href="#_1-simple-single-integral" aria-hidden="true">#</a> 1. Simple single integral</h4>`,9),o=s("p",null,[a("To calculate $$I(a,b) = \\int_0^1 a x^2 + b \\quad dx$$ when "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"a"),s("mo",null,"="),s("mn",null,"2"),s("mo",{separator:"true"},","),s("mi",null,"b"),s("mo",null,"="),s("mn",null,"1")]),s("annotation",{encoding:"application/x-tex"},"a=2, b=1")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal"},"a"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),s("span",{class:"mord"},"2"),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord mathnormal"},"b"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"1")])])])],-1),c=n(`<div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">from</span> scipy<span class="token punctuation">.</span>integrate <span class="token keyword">import</span> quad
<span class="token keyword">def</span> <span class="token function">integrand</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> a<span class="token operator">*</span>x<span class="token operator">**</span><span class="token number">2</span> <span class="token operator">+</span> b

a <span class="token operator">=</span> <span class="token number">2</span>
b <span class="token operator">=</span> <span class="token number">1</span>
I <span class="token operator">=</span> quad<span class="token punctuation">(</span>integrand<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> args<span class="token operator">=</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>I<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><pre>(1.6666666666666667, 1.8503717077085944e-14)
</pre><p>The return value is a tuple in the form of <code>(estimated value of the integral, an upper bound on the error)</code></p><h4 id="_2-single-integral-with-exponential" tabindex="-1"><a class="header-anchor" href="#_2-single-integral-with-exponential" aria-hidden="true">#</a> 2. Single integral with exponential</h4>`,4),r=s("p",null,[a("To calculate $$I(x) = \\int_1^\\infty \\frac{e^{-xt}}{2} dt$$ when "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"t"),s("mo",null,"="),s("mn",null,"2")]),s("annotation",{encoding:"application/x-tex"},"t=2")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6151em"}}),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"2")])])])],-1),u=n(`<div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">from</span> scipy<span class="token punctuation">.</span>integrate <span class="token keyword">import</span> quad
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
<span class="token keyword">def</span> <span class="token function">integrand</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> np<span class="token punctuation">.</span>exp<span class="token punctuation">(</span><span class="token operator">-</span>x<span class="token operator">*</span>t<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span>

t <span class="token operator">=</span> <span class="token number">2</span>
I <span class="token operator">=</span> quad<span class="token punctuation">(</span>integrand<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> np<span class="token punctuation">.</span>inf<span class="token punctuation">,</span> args<span class="token operator">=</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>I<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><pre>(0.03383382080915317, 5.2341136313236115e-12)
</pre><h4 id="_3-double-integral-with-non-constant-integration-bounds" tabindex="-1"><a class="header-anchor" href="#_3-double-integral-with-non-constant-integration-bounds" aria-hidden="true">#</a> 3. Double integral with non-constant integration bounds</h4><p>To calculate</p>`,4),m=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("mi",null,"I"),s("mo",null,"="),s("msubsup",null,[s("mo",null,"\u222B"),s("mrow",null,[s("mi",null,"y"),s("mo",null,"="),s("mn",null,"0")]),s("mn",null,"0.5")]),s("msubsup",null,[s("mo",null,"\u222B"),s("mrow",null,[s("mi",null,"x"),s("mo",null,"="),s("mn",null,"0")]),s("mrow",null,[s("mn",null,"1"),s("mo",null,"\u2212"),s("mn",null,"2"),s("mi",null,"y")])]),s("mi",null,"x"),s("mi",null,"y"),s("mspace",{width:"1em"}),s("mi",null,"d"),s("mi",null,"x"),s("mi",null,"d"),s("mi",null,"y")]),s("annotation",{encoding:"application/x-tex"},"I=\\int_{y=0}^{0.5} \\int_{x=0}^{1-2y} xy \\quad dx dy ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.07847em"}},"I"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"2.6121em","vertical-align":"-1.0481em"}}),s("span",{class:"mop"},[s("span",{class:"mop op-symbol large-op",style:{"margin-right":"0.44445em",position:"relative",top:"-0.0011em"}},"\u222B"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.564em"}},[s("span",{style:{top:"-1.7881em","margin-left":"-0.4445em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.03588em"}},"y"),s("span",{class:"mrel mtight"},"="),s("span",{class:"mord mtight"},"0")])])]),s("span",{style:{top:"-3.8129em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},"0.5")])])])]),s("span",{class:"vlist-s"},"\u200B")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.0481em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mop"},[s("span",{class:"mop op-symbol large-op",style:{"margin-right":"0.44445em",position:"relative",top:"-0.0011em"}},"\u222B"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.564em"}},[s("span",{style:{top:"-1.7881em","margin-left":"-0.4445em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"x"),s("span",{class:"mrel mtight"},"="),s("span",{class:"mord mtight"},"0")])])]),s("span",{style:{top:"-3.8129em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},"1"),s("span",{class:"mbin mtight"},"\u2212"),s("span",{class:"mord mtight"},"2"),s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.03588em"}},"y")])])])]),s("span",{class:"vlist-s"},"\u200B")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.9119em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord mathnormal"},"x"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"y"),s("span",{class:"mspace",style:{"margin-right":"1em"}}),s("span",{class:"mord mathnormal"},"d"),s("span",{class:"mord mathnormal"},"x"),s("span",{class:"mord mathnormal"},"d"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"y")])])])])],-1),d=n(`<p>[Method 1]</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">from</span> scipy <span class="token keyword">import</span> integrate
<span class="token keyword">def</span> <span class="token function">f</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> x<span class="token operator">*</span>y

<span class="token keyword">def</span> <span class="token function">bounds_y</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0.5</span><span class="token punctuation">]</span>

<span class="token keyword">def</span> <span class="token function">bounds_x</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">2</span><span class="token operator">*</span>y<span class="token punctuation">]</span>

I <span class="token operator">=</span> integrate<span class="token punctuation">.</span>nquad<span class="token punctuation">(</span>f<span class="token punctuation">,</span><span class="token punctuation">[</span>bounds_x<span class="token punctuation">,</span>bounds_y<span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>I<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>[Method 2]</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">from</span> scipy<span class="token punctuation">.</span>integrate <span class="token keyword">import</span> dblquad
area <span class="token operator">=</span> dblquad<span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">,</span> y<span class="token punctuation">:</span> x<span class="token operator">*</span>y<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token keyword">lambda</span> x<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">lambda</span> x<span class="token punctuation">:</span> <span class="token number">1</span><span class="token operator">-</span><span class="token number">2</span><span class="token operator">*</span>x<span class="token punctuation">)</span>
area
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><pre>(0.010416666666666668, 4.1016201284723663e-16)
</pre>`,5),h=[i,o,c,r,u,m,d];function k(g,b){return t(),p("div",null,h)}const x=e(l,[["render",k],["__file","integration.html.vue"]]);export{x as default};
